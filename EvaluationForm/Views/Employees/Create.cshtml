@model EvaluationForm.Models.Employee

@{
    ViewBag.Title = "Create";
}

<h2>Create Evaluation</h2>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <script type="text/javascript">

            $(document).ready(function () {

                // Calculate unit increase/decrease of percentage
                var percentUnitIncrease = 100 / $(".eval-ctrl").length;

                function CheckForTextValues(idOfTextBox) {

                    var percentage = 0;

                    // Set custom attribute value to the control
                    $("#" + idOfTextBox).data("val", $("#" + idOfTextBox).val());

                    $(".eval-ctrl").each(function () {

                        if ($(this).data("val").length > 0) {
                            percentage += percentUnitIncrease;
                        }
                    });

                    $(".progress-bar").css("width", percentage + "%");
                }


                /*************************New Logic to implement keyup event for all control classes********************/

                //Subscribe keyup event for all controls using class
                $(".eval-ctrl").keyup(function () {
                    var keyCode = e.keyCode || e.which;

                    if (keyCode == 9) {

                        CheckForTextValues($(this).attr("id"));
                    }
                });

                // Similarly blur event subscription for all controls using class name
                $(".eval-ctrl").blur(function () {
                    CheckForTextValues($(this).attr("id"));
                });

            }
       );
        </script>
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName,  new { htmlAttributes = new { @class = "form-control eval-ctrl", data_val = "" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control eval-ctrl", data_val = "" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control eval-ctrl", data_val = "" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
        <div>
            <div class="progress">
                <div id="ProgressDiv" class="progress-bar progress-bar-success active progress-striped" style="width:0%; min-width:0%">

                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to All Evaluations", "Index")
</div>


